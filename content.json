{"pages":[{"title":"关于","date":"2019-05-08T13:27:46.000Z","updated":"2019-05-08T13:27:46.000Z","comments":false,"path":"about/index.html","permalink":"http://blog.yatus.cn/about/index.html","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334&#123; name: &apos;yatus&apos; age: 25, gender: &apos;男&apos;, profession: &apos;Java开发工程师&apos;, experience: &apos;3年&apos;, address: &apos;广东省广州市&apos;, education: &apos;本科&apos;, github: &apos;https://github.com/yatus&apos;, blog: &apos;http://blog.yatus.com&apos;, email: &apos;1373792606@qq.com&apos;, skills: [ [&apos;Java&apos;, &apos;Java Web&apos;, &apos;Jave SE&apos;, &apos;Java EE&apos;,&apos;JVM&apos;], [&apos;设计模式&apos;], [&apos;Linux&apos;,&apos;Shell&apos;,&apos;Python&apos;], [&apos;Git&apos;, &apos;SVN&apos;], [&apos;Spring&apos;,&apos;Spring MVC&apos;,&apos;Spring Boot&apos;,&apos;Spring Data&apos;,&apos;Spring Cloud&apos;], [&apos;Redis&apos;, &apos;MongoDB&apos;, &apos;Mysql&apos;], [&apos;Jpa&apos;, &apos;Mybatis&apos;], [&apos;Dubbo&apos;], [&apos;Kafka&apos;, &apos;RabbitMq&apos;], [&apos;Hadoop&apos;,&apos;HBase&apos;,&apos;Hive&apos;,&apos;Spark&apos;,&apos;Flume&apos;,&apos;Zokeerper&apos;,&apos;Flink&apos;], [&apos;Docker&apos;,&apos;K8s&apos;] ], devTools: [ [&apos;Sublime Text&apos;, &apos;Visual Studio Code&apos;,&apos;IntelliJ IDEA&apos;], [&apos;Fiddler&apos;], [&apos;SourceTree&apos;, &apos;TortoiseSVN&apos;], [&apos;SwitchHosts&apos;], [&apos;Navicat&apos;], ] &#125;"},{"title":"分类","date":"2019-04-23T07:52:08.000Z","updated":"2019-04-23T07:18:53.000Z","comments":false,"path":"categories/index.html","permalink":"http://blog.yatus.cn/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-04-23T07:52:08.000Z","updated":"2019-04-23T07:18:53.000Z","comments":true,"path":"links/index.html","permalink":"http://blog.yatus.cn/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-04-23T07:52:08.000Z","updated":"2019-04-23T07:18:53.000Z","comments":false,"path":"tags/index.html","permalink":"http://blog.yatus.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"linux虚拟机三种网络介绍","slug":"linux虚拟机三种网络介绍","date":"2018-01-10T08:48:30.000Z","updated":"2019-05-08T13:54:27.000Z","comments":true,"path":"2018/01/10/linux虚拟机三种网络介绍/","link":"","permalink":"http://blog.yatus.cn/2018/01/10/linux虚拟机三种网络介绍/","excerpt":"","text":"虚拟机三种网络模式介绍bridged（桥接模式）&emsp;&emsp;在这种模式下，使用VMnet0虚拟交换机，虚拟机与物理机连的是同一个网络，虚拟机和物理机是并列关系，可以说是地位相同的，它可以访问网内任何一台机器。在桥接模式下，可以手工配置它的TCP/IP配置信息（IP、子网掩码等，而且还要和宿主机器处于同一网段），以实现通过局域网的网关或路由器访问互联网，还可以将IP地址和DNS设置成“自动获取”。如果网络环境是ip资源很缺少的下不太适用，可能造成ip冲突。&emsp;&emsp;上图中，A、A1、B、C可以互相访问的，如果A可以访问外网，A1也可以访问外网。NAT（网络地址转换模式）&emsp;&emsp;使用NAT模式，就是让虚拟机借助NAT（网络地址转换）功能，通过宿主机器所在的网络来访问公网，物理机充当了路由器的角色，如果物理机不能上网，那虚拟机也不能上网。这种模式的兼容性是非常好的，因为当物理机的网络环境变化时，虚拟机的网络并不会有影响。NAT模式下的虚拟机的TCP/IP配置信息是由VMnet8虚拟网络的DHCP服务器提供的，因此虚拟系统也就无法和本局域网中的其他真实主机进行通讯。&emsp;&emsp;上图中，A、A1、A2是可以互相访问的，但A1和A2都不能访问B或C，相反地，B和C都不能访问A1和A2。另外如果A可以访问外网，A1、A2也可以访问外网。host-only（仅主机模式）&emsp;&emsp;在host-only模式中，虚拟机只能与虚拟机、主机互访，但虚拟机和外部的网络是被隔离开的，也就是不能上Internet。在host-only模式下，虚拟系统的TCP/IP配置信息（如IP地址、网关地址、DNS服务器等），都是由VMnet1虚拟网络的DHCP服务器来动态分配的。&emsp;&emsp;上图中，A、A1、A2是可以互相访问的，但A1和A2都不能访问B或C，相反地，B和C都不能访问A1和A2。即使A可以访问外网，A1、A2也是不可以访问外网。","categories":[{"name":"linux","slug":"linux","permalink":"http://blog.yatus.cn/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.yatus.cn/tags/linux/"}]},{"title":"linux shell编程","slug":"linux-shell编程","date":"2018-01-09T01:37:18.000Z","updated":"2019-05-08T13:54:20.000Z","comments":true,"path":"2018/01/09/linux-shell编程/","link":"","permalink":"http://blog.yatus.cn/2018/01/09/linux-shell编程/","excerpt":"","text":"shell 概述Shell是一个用C语言编写的程序，它是用户使用Linux 的桥梁;Shell是一个命令行解释器，它接收应用程序/用户命令，然后调用操作系统内核;Shell还是一个功能强大的编程语言，易编写、易调试、灵活性强。shell 解释器linux 提供了哪些shell解释器linux中/etc/shells文件存放了默认提供的shell解释器，执行cat /etc/shells可以查看12345678910# 执行命令cat /etc/shells# 结果/bin/bash/bin/csh/bin/ksh/bin/sh/bin/tcsh/bin/zsh查看系统默认解释器Linux中可以通过输出$SHELL系统变量获得系统默认的解释器12345# 执行命令echo `$SHELL`# 结果/bin/bashshell 脚本入门脚本格式脚本内容以#!/bin/bash开头（指定解析器）脚本执行方式采用bash或sh+脚本的相对路径或绝对路径（不用赋予脚本+x权限,本质是bash解析器帮你执行脚本，所以脚本本身不需要执行权限）采用输入脚本的绝对路径或相对路径执行脚本（必须具有可执行权限+x,本质是脚本需要自己执行，所以需要执行权限）第一个shell脚本：helloworld1234567# 创建一个Shell脚本，输出helloworldtouch helloworld.sh# 在文件中输入如下内容#!/bin/bashecho &apos;hello world!&apos;# 执行脚本,使用sh或bash均可sh ./helloworld.sh第二个Shell脚本：多命令处理12345678910# 创建一个Shell脚本，输出helloworldtouch batch.sh# 在文件中输入如下内容#!/bin/bashpwdtouch batch.txtls -al &gt;&gt; batch.txt# 执行脚本,使用sh或bash均可sh ./batch.shshell 变量系统变量常用系统变量：$HOME、$PWD、$SHELL、$USER等案例实践使用set命令可以查询出当前shell中的所有变量12345678# 查看当前用户的家目录echo $HOME# 结果是/Users/yatu# 显示当前shell中的所有变量set特殊变量$n变量基本语法$n（n为数字，$0代表该脚本名称，$1-$9代表第一到第九个参数，十以上的参数，十以上的参数需要用大括号包含，如${10}）案例实践123456789101112# 输出该脚本文件名称、输入参数1和输入参数2的值touch parameter.sh# 在文件中输入如下内容#!/bin/bashecho &quot;$0 $1 $2&quot;# 执行脚本,使用sh或bash均可sh ./parameter.sh p1 p2# 输出结果是./parameter.sh p1 p2$#变量基本语法$#（获取所有输入参数个数）案例实践123456789# 获取输入参数的个数# 继续在文件parameter.sh末尾追加如下内容echo $## 执行脚本,使用sh或bash均可sh ./parameter.sh p1 p2# 输出结果是./parameter.sh p1 p22$*变量基本语法$*（这个变量代表命令行中所有的参数，$*把所有的参数看成一个整体）案例实践12345678910# 获取输入参数的个数# 继续在文件parameter.sh末尾追加如下内容echo $*# 执行脚本,使用sh或bash均可sh ./parameter.sh p1 p2# 输出结果是./parameter.sh p1 p22p1 p2$@变量基本语法$@（这个变量也代表命令行中所有的参数，不过$@把每个参数区分对待）案例实践1234567891011# 获取输入参数的个数# 继续在文件parameter.sh末尾追加如下内容echo $@# 执行脚本,使用sh或bash均可sh ./parameter.sh p1 p2# 输出结果是./parameter.sh p1 p22p1 p2p1 p2$？变量基本语法$?（最后一次执行的命令的返回状态。如果这个变量的值为0，证明上一个命令正确执行；如果这个变量的值为非0（具体是哪个数，由命令自己来决定），则证明上一个命令执行不正确了）案例实践12345# 继续在文件parameter.sh脚本是否正确执行sh ./parameter.sh p1 pecho $?# 结果是0自定义变量基本语法定义变量：变量=值撤销变量：unset 变量声明静态变量：readonly变量(注意：静态变量不能unset)可把变量提升为全局环境变量，可供其他Shell程序使用，语法是export 变量名变量定义规则变量名称可以由字母、数字和下划线组成，但是不能以数字开头，环境变量名建议大写；等号两侧不能有空格；在bash中，变量默认类型都是字符串类型，无法直接进行数值运算；变量的值如果有空格，需使用双引号或单引号括起来。案例实践12345678910111213141516171819202122232425262728293031323334353637383940414243# 定义变量a&gt; a=5&gt; echo $a# 结果是 5# 给变量a重新赋值&gt; a=8&gt; echo $a# 结果是 8# 撤销变量a&gt; unset a&gt; echo $a# 结果是# 声明静态的变量b=2，不能unset&gt; readonly b=2&gt; echo $b# 结果是 2# 尝试修改静态变量b&gt; b=9# 结果是 -bash: b: readonly variable# 在bash中，变量默认类型都是字符串类型，无法直接进行数值运算&gt; c=1+2&gt; echo $c# 结果是 1+2# 变量的值如果有空格，需要使用双引号或单引号括起来&gt; d=hello world# 结果是 -bash: world: command not found&gt; d=&quot;hello world&quot;&gt; echo $d# 结果是 hello worldshell 运算符基本语法$((运算式))或$[运算式]expr 参数1 运算符 参数2 （运算符有：加+，减-，乘*，除/，取余%）expr运算符间要有空格;第一种方式不能直接终端输出，需要赋值给指定的变量，如c=$((2 * 3))或c=$[2*3]案例实践1234567891011121314151617# 计算3+2的值&gt; expr 2 + 35# 计算3-2的值expr 3 - 2 1# 计算（2+3）X4的值# expr一步完成计算&gt; expr `expr 2 + 3` \\* 4 20# 采用$[运算式]方式&gt; r=$[(2+3)*4]&gt; echo $r20shell 条件判断基本语法[ condition ]condition前后要有空格;条件非空即为true，[ notempty ]返回true，[ ] 返回false常用判断条件两个整数之间的比较符号描述=字符串比较-lt小于-le小于等于-eq等于-gt大于-ge大于等于-ne不等于按照文件权限进行判断符号描述-r有读的权限-w有写的权限-x有执行的权限按照文件类型进行判断符号描述-f文件存在并且是一个常规的文件-d文件存在并是一个目录-e文件存在案例实践123456789101112131415161718# 50是否大于等于22&gt; [ 50 -ge 22 ]&gt; echo $?# 结果是0# helloworld.sh是否具有写权限&gt; [ -w helloworld.sh ]&gt; echo $?# 结果是0# 判断/home/yatu/batch.txt目录中的文件是否存在&gt; [ -e /home/atguigu/cls.txt ]&gt; echo $?# 结果是1shell 流程控制if 判断基本语法12345678910if [ 条件判断式 ];then 程序 fi或者if [ 条件判断式 ] then 程序 fi注意：[ 条件判断式 ]，中括号和条件判断式之间必须有空格;if后也要有空格案例实践123456789101112131415161718# 输入一个数字，如果是1，则输出hello，如果是2，则输出world，如果是其它，什么也不输出# 新建文件touch if.sh# 编辑文件，写入如下信息#!/bin/bash if [ $1 -eq &apos;1&apos; ];then echo hellofiif [ $1 -eq &apos;2&apos; ]then echo worldfi# 执行 sh ./if.sh 1hellocase 判断基本语法123456789101112case $变量名 in &quot;值1&quot;） 如果变量的值等于值1，则执行程序1 ;; &quot;值2&quot;） 如果变量的值等于值2，则执行程序2 ;; …省略其他分支… *） 如果变量的值都不是以上的值，则执行此程序 ;; esaccase行尾必须为单词in，每一个模式匹配必须以右括号）结束双分号;;表示命令序列结束，相当于java中的break。最后的*）表示默认模式，相当于java中的default。案例实践12345678910111213141516171819# 还是上面if那个例子# 新建文件touch case.sh# 编辑文件，写入如下信息#!/bin/bash case $1 in&quot;1&quot;) echo &quot;hello&quot;;;&quot;2&quot;) echo &quot;world&quot;;;esac# 执行 sh ./case.sh 2worldfor 循环基本语法1234for (( 初始值;循环控制条件;变量变化 )) do 程序 done案例实践12345678910111213141516# 计算1到100的累计# 新建文件touch for.sh# 编辑文件，写入如下信息#!/bin/bashsum=0for ((i=1;i&lt;=100;i++)) do sum=$[$sum + $i] doneecho $sum# 执行 sh ./for.sh# 结果 5050while 循环基本语法1234while [ 条件判断式 ] do 程序 done案例实践12345678910111213141516171819# 还是for那个例子# 新建文件touch while.sh# 编辑文件，写入如下信息#!/bin/bashsum=0i=1while [ $i -le 100 ] do sum=$[$sum + $i] i=$[$i + 1] doneecho $sum# 执行 sh ./while.sh# 结果 5050shell 函数系统函数常用系统函数basename基本语法basename [string / pathname] [suffix]basename命令会删掉所有的前缀包括最后一个/字符，然后将字符串显示出来;suffix为后缀，如果suffix被指定了，basename会将pathname或string中的suffix去掉;dirname基本语法dirname 文件绝对路径dirname命令从给定的包含绝对路径的文件名中去除文件名（非目录的部分），然后返回剩下的路径（目录的部分）;案例实践12345678910111213# 截取该/home/yatu/batch.txt路径的文件名称&gt; basename /home/yatu/batch.txt # 结果是 batch.txt&gt; basename /home/yatu/batch.txt .txt# 结果是 batch# batch.txt文件的路径&gt; dirname /home/yatu/batch.txt /home/yatu自定义函数基本语法123456[ function ] funname[()]&#123; Action; [return int;]&#125;funname必须在调用函数地方之前，先声明函数，shell脚本是逐行运行。不会像其它语言一样先编译;函数返回值，只能通过$?系统变量获得，可以显示加：return返回，如果不加，将以最后一条命令运行结果，作为返回值。return后跟数值n(0-255)案例实践12345678910111213141516171819202122232425# 计算两个输入参数的和# 新建文件touch fun.sh# 编辑文件，写入如下信息#!/bin/bash function sum()&#123; s=0 s=$[$1 + $2] echo $s&#125;read -p &quot;Please input the number1: &quot; n1;read -p &quot;Please input the number2: &quot; n2;sum $n1 $n2;# 执行 sh ./fun.shPlease input the number1: 20Please input the number2: 51# 结果是 71","categories":[{"name":"linux","slug":"linux","permalink":"http://blog.yatus.cn/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.yatus.cn/tags/linux/"},{"name":"shell","slug":"shell","permalink":"http://blog.yatus.cn/tags/shell/"}]},{"title":"linux常用基本命令","slug":"linux常用基本命令","date":"2018-01-08T02:37:18.000Z","updated":"2019-05-08T13:16:54.000Z","comments":true,"path":"2018/01/08/linux常用基本命令/","link":"","permalink":"http://blog.yatus.cn/2018/01/08/linux常用基本命令/","excerpt":"","text":"帮助命令man获得帮助信息基本语法man [命令或配置文件]显示说明信息描述NAME命令的名称和单行描述SYNOPSIS怎样使用命令DESCRIPTION命令功能的具体描述EXAMPLES使用命令的例子SEE ALSO相关主题（通常是手册页）案例实践12man ls #查看ls命令的帮助信息man ps #查看ps命令的帮助信息help 获得shell内置命令的帮助信息基本语法help [命令]案例实践1help cd #查看cd命令的帮助信息常用快捷键快捷键描述ctrl + c停止进程ctrl + l清屏；ctrl + q退出tab命令补全上下键查找执行过的命令关机重启命令&emsp;&emsp;在linux领域内大多用在服务器上，很少遇到关机的操作。毕竟服务器上跑一个服务是永无止境的，除非特殊情况下，不得已才会关机。正确的关机流程为：sync &gt; shutdown &gt; reboot &gt; halt基本语法sync （功能描述：将数据由内存同步到硬盘中）halt （功能描述：关闭系统，等同于shutdown -h now 和 poweroff）reboot 功能描述：就是重启，等同于 shutdown -r now）shutdown[选项] [参数]选项功能-参数功能-h-h=halt关机now立刻关机-r-r=reboot重启时间等待多久后关机（时间单位是分钟）Linux系统中为了提高磁盘的读写效率，对磁盘采取了 “预读迟写”操作方式。当用户保存文件时，Linux核心并不一定立即将保存数据写入物理磁盘中，而是将数据保存在缓冲区中，等缓冲区满时再写入磁盘，这种方式可以极大的提高磁盘写入数据的效率。但是，也带来了安全隐患，如果数据还未写入磁盘时，系统掉电或者其他严重问题出现，则将导致数据丢失。使用sync指令可以立即将缓冲区的数据写入磁盘。案例实践123456sync #将数据由内存同步到硬盘中 reboot #重启 halt #关机shutdown -h 1 &apos;This server will shutdown after 1 mins&apos; #计算机将在1分钟后关机，并且会显示在登录用户的当前屏幕中shutdown -h now #立马关机（等同于 halt）shutdown -r now #系统立马重启（等同于 reboot）文件目录类pwd 显示当前工作目录的绝对路径基本语法pwd案例实践12cd /root #进入目录pwd #显示当前工作目录，则是/rootls 列出目录的内容基本语法ls [选项] [目录或文件]常用选项说明选项备注-a全部文件，包括隐藏的文件一起列举出来-l使用较长格式列出信息使用-l参数显示说明每行列出的信息一次是：文件类型与权限、链接数、文件属主、文件属组、文件大小、建立或修改时间、名字案例实践1ls -al # 查看当前目录的所有内容信息cd 切换目录基本语法cd [参数]常用参数说明参数说明cd 绝对路径切换路径cd 相对路径切换路径cd ~或 cd回到自己的家目录cd -回到上一次所在的目录cd ..回到当前目录的上一级目录cd -P跳转到实际物理路径，而非快捷方式路径案例实践1234567# 假设当前用户是rootcd /root/ #使用绝对路径切换到root目录mkdir doc #在当前目录创建doc目录cd doc/ #使用相对路径切换到doc目录cd ~ #回到自己的家目录，即/rootcd - #回到上一次所在的目录，即/root/doc/cd .. #回到当前目录的上一级目录，即/root/mkdir 创建一个新的目录基本语法mkdir [选项] 要创建的目录常用选项说明选项备注-p创建多层目录案例实践12345# 假设当前用户是rootcd ~ #回到家目录，就/root/mkdir yatus #创建空目录mkdir yatus/docs #在yatus目录内创建子目录docsmkdir yatus/test/docs #创建多级目录rmdir 删除一个空的目录基本语法rmdir 要删除的空目录案例实践123# 假设当前用户是rootcd ~ #回到家目录，就/root/rmdir yatus/docs #删除一个空的目录，如果为空会报错，需要使用rm命令删除touch 创建空的文件基本语法touch 文件名称案例实践12cd ~ #回到自己的家目录touch test/docs/doc.txt #创建空文件cp 复制文件或目录基本语法cp [选项] source dest （复制source到dest）tips：强制覆盖不提示的方法：\\cp常用选项说明选项备注-r递归复制整个文件夹参数说明参数备注source源文件dest目标文件案例实践123cd ~ #回到自己的家目录cp test/docs/doc.txt test/ #复制文件cp test/ ./ #递归复制整个文件夹rm 移除文件或目录基本语法rm [选项] 需要删除的文件或目录选项说明选项备注-r递归删除目录中的所有内容-f强制执行删除操作，而不提示用于进行确认-v显示执行的详细执行过程案例实践123cd ~ #回到自己的家目录rm test/doc.txt #删除目录中的文件rm -rf test/ #递归删除目录中的所有内容mv 移动文件或目录和重命名文件或目录基本语法mv [选项] 源文件 目标文件 (重命名)mv [选项] 源文件 目录 (移动文件)mv [选项] 目录 源文件 (移动文件)选项说明选项备注-f覆盖前不询问-v显示执行的详细执行过程案例实践12345cd ~ #回到自己的家目录mkdir source dest #创建目录touch source/source.txt #创建文件mv source/source.txt source/source.log #重名令mv source/source.log dest #移动文件cat 查看文件内容基本语法cat [选项] 要查看的文件查看文件内容，从第一行开始显示，一般查看比较小的文件选项说明选项备注-n显示所有行的行号，包括空行案例实践12cd ~ #回到自己的家目录cat -n dest/source.log dest #查看文件内容并显示行号more 文件内容分屏查看基本语法more 要查看的文件more指令是一个基于VI编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。more指令中内置了若干快捷键，详见常用操作说明。常用操作说明操作备注空白键向下翻一页Enter向下翻一行q离开more，不在显示该文件的内容ctrl + F向下滚动一屏ctrl + B返回上一屏=输出当前行的行号:f输出文件名和当前的行号案例实践12cd ~ #回到自己的家目录more anaconda-ks.cfg #採用more查看文件less 分屏显示文件内容基本语法less 要查看的文件less指令用来分屏查看文件内容，它的功能与more指令类似，但是比more指令更加强大，支持各种显示终端。less指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。常用操作说明操作备注空白键向下一页q离开less，不在显示该文件的内容[pagedown]向下翻一屏[pageup]向上翻一屏/字符串向下搜索字符串的功能；n：向下查找；N：向上查找?字符串向上搜索字符串的功能；n：向上查找；N：向下查找案例实践12cd ~ #回到自己的家目录less anaconda-ks.cfg #採用less查看文件echo 输出内容基本语法echo [选项] [输出内容]选项选项备注-e支持反斜线控制的字符转换案例实践12echo &quot;hello\\twrorld&quot;echo -e &quot;hello\\twrorld&quot;head 显示文件头部内容基本语法head [选项] 文件head用于显示文件的开头部分内容，默认情况下head指令显示文件的前10行内容。选项选项备注-n &lt;行数&gt;指定显示头部内容的n行内容案例实践12cd ~head -n 2 anaconda-ks.cfg #查看文件的头2行tail 显示文件尾部内容基本语法tail [选项] 文件tail用于显示文件的开头部分内容，默认情况下tail指令显示文件的后10行内容。选项选项备注-n &lt;行数&gt;指定显示尾部内容的n行内容-f显示文件最新追加的内容监听文件变化案例实践123cd ~tail -n 2 anaconda-ks.cfg #查看文件的后2行tail -f anaconda-ks.cfg #实时追踪文件的更新&gt; 输出重定向和 &gt;&gt; 追加基本语法ls -al &gt; 文件 将列表的内容写入到具体的文件中（覆盖写）ls -al &gt;&gt; 文件 将列表的内容追加到具体的文件的末尾案例实践1234cd ~ls -al &gt; yatus.txt #将ls查看信息写入到文件中ls -al &gt;&gt; yatus.txt #将ls查看信息追加到文件中echo hello &gt;&gt; yatus.txt #采用echo将hello追加到文件中ln 软连接基本语法ls -s [原文件或目录] [软连接名]软链接也成为符号链接，类似于windows里的快捷方式，有自己的数据块，主要存放了链接其他文件的路径。删除软链接：rm -rf 软链接名，而不是rm -rf 软链接名/查询：通过ls -al就可以查看，列表属性第1位是l，尾部会有位置指向。案例实践123456789cd ~ mkdir yatustouch yatus/log.txtln -s yatus/log.txt ./log #创建软连接ls -al #查看软连接rm -rf log #删除软连接ln -s yatus/ ./yatu #创建软连接cd -P yatu #进入软连接实际物理路径history 查看执行命令历史基本语法history案例实践1history #查看已经执行过的历史命令时间日期类date时间类基本语法date [选项] [+格式]常用选项说明选项备注-d &lt;时间字符串&gt;显示指定的“时间字符串”表示的时间，而非当前时间-s &lt;时间日期&gt;设置系统日期时间常用格式说明格式备注+%Y年份+%m月份+%d天+%H时+%M分+%S秒案例实践1234567891011date #显示当前时间date +%Y #显示当前年份date +%m #显示当前月份date +%m #显示当前是哪一天date +%Y-%m-%d #显示当前年月日date &quot;+%Y-%m-%d %H:%M:%S&quot; #显示当前年月日时分秒（注意：如果带有空格的格式，需要带上引号）date -d &apos;1 days ago&apos; #显示昨天时间date -d &apos;-1 days ago&apos; #显示明天时间date -s &apos;2016-05-06 09:57:18&apos; #设置系统当前时间cal日期类基本语法cal [选项]不加选项，默认显示本月日历常用选项说明选项备注具体某一年显示这一年的日历案例实践12cal #查看当月的日历cal 2017 #查看2017年整年的日历用户管理命令useradd 添加新用户基本语法useradd [选项] 用户名在没有指定-d选项的情况下,系统默认会在’/home’目录下创建和用户同名的家目录常用选项说明选项备注-g 组名添加新用户到指定的组-d 指定家目录添加新用户到指定的家目录，需要注意的是，指定的家目录尽量是不存在的，不然会出现错误警告案例实践123useradd yatu #添加新用户yatuuseradd -g yatus yatus #添加新用户使用指定的组useradd -d admin -g admin admin ##添加新用户使用指定的组和家目录passwd 设置用户密码基本语法passwd 用户名案例实践1passwd yatu #设置用户密码usermod 修改用户基本语法usermod [选项] 用户名常用选项说明选项备注-g修改用户的吃书登录组，给定的组必须存在-d 指定家目录添加用户到指定的家目录案例实践1usermod -g root yatuuserdel 删除用户基本语法userdel [选项] 用户名在不指定-r选项的时候，默认是保留家目录的常用选项说明选项备注-r删除用户，不保留家目录案例实践1userdel -r yatu #删除用户，且不保留家目录id 查看用户是否存在基本语法id 用户名当用户不存在的时候，返回无此用户提示，否则返回用户id、所在组的id和组名案例实践1id yatu #查看用户是否存在su 切换用户基本语法su - 需要切换的用户名在操作的过程中，如果当前用户的权限不够，可以通过su -指令，切换到高权限用户；从权限搞的用户切换到权限低的用户时，不需要输入密码，反之需要；若需要返回到原来用户时，使用exit命令即可；需要注意的是，如果su -中去掉-，切换过去的时候，不能获取该用户的华宁变量及执行权限案例实践1su - yatu #切换到yatu用户who am i和whoami 查询当前用户信息基本语法whoami （显示自身用户名称）who am i （显示登录用户的用户名）案例实践12whoami #显示自身用户名称who am i #显示登录用户的用户名sudo 设置普通用户具有root权限以root身份添加yatus用户，并对其设置密码12useradd yatus #新增yautspasswd yatus #设置yauts登录密码需改配置文件123456789# 修改/etc/sudoers文件，找到100行，在root下面添加一行，如下所示：## Allow root to run any commands anywhereroot ALL=(ALL) ALLyatus ALL=(ALL) ALL# 或者配置成采用sudo命令时，不需要输入密码## Allow root to run any commands anywhereroot ALL=(ALL) ALLyatus ALL=(ALL) NOPASSWD:ALL#修改完毕，就可以使用yatu账号登录，使用命令sudo，即可获得root的权限进行操作用户组管理命令用户组类似于角色，每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同linux系统对用户组的规定有所不同，如linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新。groupadd 新增用户组基本语法groupadd 组名案例实践1groupadd test #添加一个test组groupdel 删除用户组基本语法groupdel 组名案例实践1groupdel test #删除test组groupmod 修改用户组基本语法groupmod -n 新组名 老组名案例实践12groupadd xjl #新建组groupmod -n xjll xjl #修改组用户和组的相关文件/etc/passwd 文件用户(user)的配置文件，记录用户的各种信息；每行的含义是：用户名:口令:用户标志号:组标志号:注释性描述:主目录:登录shell123456789# 查看/etc/passwd文件，root用户的信息root:x:0:0:root:/root:/bin/bash# 根据查询出的信息，其中口令是加密的，这里看不出具体的内容，但可得知root用户的家目录是/root,其用户id是0，组id也是0，下面通过`id root`命令对比下# 查看root用户信息，执行命令`id root`uid=0(root) gid=0(root) 组=0(root)# 综上，可以看得出来，用户id、组id都是能对应的上的/etc/shadow 文件口令的配置文件；每行的含义是：登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志12# 查看/etc/shadow文件，root用户的信息root:$6$BfyGGeiT64.dLa4Y$ICGVutrsuCTFxAUPedg2/.jMQEPpwOc2ND3PHqoGk2WlPhuRP8hYPllq6DJG0aPWt3ixMk2l3EYhscr9AntKR/::0:99999:7:::/etc/group 文件组(group)的配置文件，记录linux包含的组的信息每行的含义是：组名:口令:组标志号:组内用户列表1234# 查看/etc/group文件，root用户的信息root:x:0:# 根据查询出的信息，其中口令是加密的，其组id也是0搜索查找类find 查找文件或者目录find指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件显示在终端。基本语法find [搜索范围] [选项]常用选项说明选项备注-name&lt;查询方式&gt;按照指定的文件名查找模式查找文件-user&lt;用户名&gt;查找属于指定用户名所有文件-size&lt;文件大小&gt;按照指定文件大小查找文件案例实践123find /root -name *.txt #根据文件名查找/root目录下的带有.txt后缀的文件find /home -user yatu #根据文件拥有者yatu查找/home目录下的的文件find /home -size +204800 #按文件大小：在/home目录下查找大于200m的文件（+n 大于 -n小于 n等于）locate 快速定位文件路径locate指令利用事先建立的系统中所有文件名称及路径的locate数据库实现快速定位给定的文件。Locate指令无需遍历整个文件系统，查询速度较快。为了保证查询结果的准确度，管理员必须定期更新locate。基本语法locate 搜索文件由于locate指令基于数据库进行查询，所以第一次运行前，必须使用updatedb指令创建locate数据库案例实践12updatedb #更新locate数据库locate tmp #查询grep 过来查找及“|”管道符管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理基本语法grep [选项] 查找内容 源文件常用选项说明选项备注-n显示匹配行及行号-i忽略字母大小写案例实践1cat anaconda-ks.cfg | grep -ni swap #不区分大小写查找swap在文件中哪些行压缩和解压类gzip和gunzip基本语法gzip 文件 （压缩文件，只能将文件压缩成*.gz文件）gunzip 文件.gz (解压缩文件)只能压缩文件,不能压缩目录;不保留原来的文件;案例实践123echo &quot;gzip and gunzip&quot; &gt;&gt; text.log # 往文件里面写入文本gzip text.log #压缩gunzip text.log.gz #解压zip和unzip基本语法zip [选项] xxx.zip 将要压缩的文件或目录 （压缩文件和目录）unzip [选项] xxx.zip (解压缩文件)zip常用选项说明选项备注-r递归压缩，压缩目录unzip常用选项说明选项备注-d指定解压后文件存放的目录案例实践12zip -r home.zip /home/ #压缩home目录unzip -d ./yatus/ home.zip #解压home.zip到./yatus目录下tar 打包基本语法tar [选项] xxx.tar.gz 将要打包进去的内容 （最后打包后的文件是.tar.gz文件）解压常用写法：tar zxvf xxx.tar.gz -C 指定解压目录，如果指定-C参数，则指定的目录必须存在，不指定-C参数，则解压到当前目录常用选项说明选项备注-c产生.tar打包文件-v显示详细的信息-f指定压缩后的文件名-z打包同事压缩-x解包.tar文件案例实践1234567891011121314mkdir dcd dmkdir d1 d2 d3 tempecho d1 &gt;&gt; d1/d1.txtecho d2 &gt;&gt; d2/d2.txtecho t1 &gt;&gt; t1.txtecho t2 &gt;&gt; t2.txttar -zcvf t.tar.gz t1.txt t2.txt #压缩多个文件tar -zcvf d.tar.gz d1/ d2/ d3/ #压缩多个目录rm -rf t1.txt t2.txt #删除当前目录的几个文件tar -zxvf t.tar.gz #将压缩的t1.txt t2.txt解压到当前目录tar -zxvf d.tar.gz -C temp/ #解压到指定目录文件权限类文件属性Linux系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。权限简写方式，r（读，对应英文是read）、w（写，对应英文是write）、x（执行，对应英文是excute）在Linux中ls -al命令来显示一个文件的属性以及文件所属的用户和组，如果没有权限，就会出现-。从左到右用0-9这些数字表示，如下图所示：各个数字表示的类型解释（1）第0位表示类型，代表这个文件是目录、文件或链接文件等等。其中-代表文件；d代表目录;l表示链接文档；c表示字符设备（键盘、鼠标等）；b表示块文件（硬盘）；（2）第1-3位可以确定属主（该文件的所有者）拥有该文件的权限（所有者）；（3）第4-6位确定属组（所有者的同组用户）拥有该文件的权限（所在组）；（4）第7-9位确定其他用户拥有该文件的权限（其他组）。一般而言，文件是谁创建的，就自然成为该文件的所有者；默认情况下，该文件的所在组是该所有者所在的组；除了文件的所有者和所在组的用户意外，系统的其他用户都是文件的其他组。rwx作用文件和目录的不同解释作用到文件作用到目录r代表可读(read): 可以读取，查看r代表可读(read): 可以读取，ls查看目录内容w代表可写(write): 可以修改，但是不代表可以删除该文件，删除一个文件的前提条件是对该文件所在的目录有写权限，才能删除该文件w代表可写(write): 可以修改，目录内创建+删除+重命名目录x代表可执行(execute):可以被系统执行x代表可执行(execute):可以进入该目录文件基本类型解释（1）如果查看到是文件：链接数指的是硬链接个数。创建硬链接方法ln [原文件] [目标文件]，硬链接只能作用于具体的文件上，不能作用于目录（2）如果查看的是文件夹：链接数指的是子文件夹个数。chmod 改变权限权限一般也用数字表示,读（read）= 4，写（write）= 2，执行（execute）= 1，也可以是组合的形式，比如4+2+1=7就是拥有读写执行权限，4+2=6就是拥有读写权限；对所有者、所属组、其他组也有对应的简写方式，u（所有者）、g（所在组）、o（其他人）、a（所有人，即u、g和o的总和）。基本语法chmod [{ugoa}{+-=}{rxw}] 文件或目录chmod [mode=421] 文件或目录案例实践12345678910111213141516171819202122# 创建hello.txt文件touch hello.txt# 修改文件使其所有者具有读写执行权限chmod u+r,u+w,u+x hello.txt # 查看文件权限-rwxr--r--. 1 root root 0 5月 6 16:45 hello.txt# 修改文件所属组具有写权限chmod g+w hello.txt# 查看文件权限-rwxrw-r--. 1 root root 0 5月 6 16:45 hello.txt# 修改文件所有用户具有读写执行权限chmod a+w,a+r,a+x hello.txt # 查看文件权限-rwxrwxrwx. 1 root root 0 5月 6 16:45 hello.txt# 采用数字的方式，设置文件所有者、所属组、其他用户都只具有可读权限chmod 444 hello.txt # 查看文件权限-r--r--r--. 1 root root 0 5月 6 16:45 hello.txt# 修改整个文件夹里面的所有文件的所有者、所属组、其他用户都具有可读可写可执行权限。chmod 777 ch/# 查看文件夹权限drwxrwxrwx. 2 yatu dev 34 5月 6 15:40 chchown 改变所有者基本语法chown [选项] 用户 文件或目录 （改变文件或目录的所有者）常用选项说明选项备注-R递归操作案例实践1234567891011121314# 以root身份创建ho.txt文件 touch ho.txt# 修改ho.txt的所有者，当前是rootchown yatu ho.txt# 修改后，执行ls -al ho.txt 发现所有者已经修改变成yatu-rw-r--r--. 1 yatu root 0 5月 6 15:34 ho.txt# 创建目录ch，并在里面创建文件ho.txtmkdir ch &amp;&amp; touch ch/ho.txt# 递归改变文件夹内的所有者chown -R yatu ch/# 查看目录所有者情况,ls -al | grep chdrwxr-xr-x. 2 yatu root 34 5月 6 15:40 ch# 查看ch文件的所有者cd ch &amp;&amp; ls -al-rw-r--r--. 1 yatu root 0 5月 6 15:40 ho.txtchgrp 改变所属组基本语法chgrp [选项] 用户组 文件或目录 （改变文件或目录的所在组）常用选项说明选项备注-R递归操作案例实践12345678910111213141516171819# 以root身份查询ho.txt,执行ls -al | grep ho-rw-r--r--. 1 yatu root 0 5月 6 15:34 ho.txt# 从上可得知，该文件所在组是root，接下来修改下它的所在组为yatu，执行chgrp yatu ho.txt &amp;&amp; ls -al | grep ho-rw-r--r--. 1 yatu yatu 0 5月 6 15:34 ho.txt# 递归改变文件夹内的所在组chgrp -R yatu ch/# 查看所在组情况,执行ls -al | grep chdrwxr-xr-x. 2 yatu yatu 34 5月 6 15:40 ch# 查看ch文件的所有者，执行cd ch &amp;&amp; ls -al-rw-r--r--. 1 yatu yatu 0 5月 6 15:40 ho.txt# 新增用户组devgroupadd dev# 递归修改文件夹内的所有者为root，所在组是devchown -R root:dev ch/# 查看执行情况,执行ls -al | grep chdrwxr-xr-x. 2 root dev 34 5月 6 15:40 ch# 查看ch文件夹内情况,执行cd ch/ &amp;&amp; ls -al-rw-r--r--. 1 root dev 0 5月 6 15:38 ch.txt磁盘分区类df 查看磁盘空间使用情况基本语法df [选项]常见选项说明选项备注-h以热凝较易阅读的格式显示案例实践1df -h #查看磁盘使用情况fdisk 查看分区基本语法fdisk [选项]该命令必须在root用户下才能使用常见选项说明选项备注-l显示所有磁盘的分区列表案例实践1fdisk -l #查看磁盘分区情况分区挂载和卸载对于Linux用户来讲，不论有几个分区，分别分给哪一个目录使用，它总归就是一个根目录、一个独立且唯一的文件结构。Linux中每个分区都是用来组成整个文件系统的一部分，它在用一种叫做“挂载”的处理方法，它整个文件系统中包含了一整套的文件和目录，并将一个分区和一个目录联系起来，要载入的那个分区将使它的存储空间在这个目录下获得。基本语法mount [-t vfstype] [-o options] device dir (挂载设备)umount 设备文件名或挂载点参数说明选项备注-t vfstype指定文件系统的类型，通常不必指定。mount 会自动选择正确的类型。常用类型有：1）光盘或光盘镜像：iso9660；2）DOS fat16文件系统：msdos；3）Windows 9x fat32文件系统：vfat；4）Windows NT ntfs文件系统：ntfs；5）Mount Windows文件网络共享：smbfs；6）UNIX(LINUX) 文件网络共享：nfs。-o options主要用来描述设备或档案的挂接方式。常用的参数有：1）loop：用来把一个文件当成硬盘分区挂接上系统；2）ro：采用只读方式挂接设备；3）rw：采用读写方式挂接设备；4）iocharset：指定访问文件系统所用字符集。device要挂接(mount)的设备dir设备在系统上的挂接点(mount point)案例实践1234567891011121314# 挂载光盘镜像文件mkdir /mnt/cdrom/ #建立挂载点# 设备/dev/cdrom挂载到 挂载点 ：/mnt/cdrom中mount -t iso9660 /dev/cdrom /mnt/cdrom# 查看挂载情况ls -al /mnt/cdrom/# 设置开机自动挂载vi /etc/fstab# 并在文件末尾追加/dev/cdrom /mnt/cdrom iso9660 defaults 0 0# 卸载光盘镜像文件umount /mnt/cdrom进程线程类进程是正在执行的一个程&gt; 进程是正在执行的一个程&gt; 进程是正在执行的一个程序或命令，每一个进程都是一个运实体，都有自己的地址空间，并占用一定的系统资源。ps 查看当前系统基本语法ps [选项]常用选项说明选项备注-a选择所有进程-u显示所有用户的进程-x显示没有终端的进程-e选择所有进程，通常配合-f使用-f显示完整格式列表，通常配合-e使用功能描述1）ps -aux显示信息说明关键词备注USER该进程是由哪个用户产生的PID进程的ID号%CPU该进程占用CPU资源的百分比，占用越高，进程越耗费资源；%MEM该进程占用物理内存的百分比，占用越高，进程越耗费资源；VSZ该进程占用虚拟内存的大小，单位KB；RSS该进程占用实际物理内存的大小，单位KB；TTY该进程是在哪个终端中运行的。其中tty1-tty7代表本地控制台终端，tty1-tty6是本地的字符界面终端，tty7是图形终端。pts/0-255代表虚拟终端。STAT进程状态。常见的状态有：R：运行、S：睡眠、T：停止状态、s：包含子进程、+：位于后台START该进程的启动时间TIME该进程占用CPU的运算时间，注意不是系统时间COMMAND产生此进程的命令名2）ps -ef显示信息说明关键词备注UID用户IDPID进程IDPPID父进程IDCCPU用于计算执行优先级的因子。数值越大，表明进程是CPU密集型运算，执行优先级会降低；数值越小，表明进程是I/O密集型运算，执行优先级会提高STIME进程启动的时间TTY完整的终端名称TIMECPU时间CMD启动进程所用的命令和参数如果想查看进程的CPU占用率和内存占用率，可以使用aux;如果想查看进程的父进程ID可以使用ef;案例实践1234# 查看进程的CPU占用率和内存占用率ps -aux# 查看进程的父进程IDps -efkill 终止进程基本语法kill [选项] 进程号 (通过进程号杀死进程)killall 进程名称 (通过进程名称杀死进程，也支持通配符，这在系统因负载过大而变得很慢时很有用)常用选项说明选项备注-g表示强迫进程立即停止案例实践1234# 杀死进程kill -9 5102# 通过进程名称杀死进程killall firefoxpstree 查看进程树基本语法pstree [选项]常用选项说明选项备注-p显示进程的PID-u显示进程的所属用户案例实践1234# 显示进程pidpstree -p# 显示进程所属用户pstree -utop 查看系统健康状态基本语法top [选项]常用选项说明选项备注-d 秒数指定top命令每隔几秒更新。默认是3秒在top命令的交互模式当中可以执行的命令-i使top不显示任何闲置或者僵死进程-p通过指定监控进程ID来仅仅监控某个进程的状态常用操作说明操作备注P以CPU使用率排序，默认就是此项M以内存的使用率排序N以PID排序q退出top查询结果字段解释1)第一行信息为任务队列信息内容备注12:26:46系统当前时间up 1 day, 13:32系统的运行时间，本机已经运行1天13小时32分钟2 users当前登录了两个用户load average: 0.00, 0.00, 0.00系统在之前1分钟，5分钟，15分钟的平均负载。一般认为小于1时，负载较小。如果大于1，系统已经超出负荷2)第二行是进程信息内容备注Tasks: 95 total系统中的进程总数1 running正在运行的进程数94 sleeping睡眠的进程0 stopped正在停止的进程0 zombie僵尸进程。如果不是0，需要手工检查僵尸进程3）第三行为CPU信息内容备注Cpu(s)0.1%us 用户模式占用的CPU百分比0.1%sy系统模式占用的CPU百分比0.0%ni改变过优先级的用户进程占用的CPU百分比99.7%id空闲CPU的CPU百分比0.1%wa等待输入/输出的进程的占用CPU百分比0.0%hi硬中断请求服务占用的CPU百分比0.1%si软中断请求服务占用的CPU百分比0.0%stst（Steal time）虚拟时间百分比。就是当有虚拟机时，虚拟CPU等待实际CPU的时间百分比。4）第四行为物理内存信息内容备注Mem625344k total 物理内存的总量，单位KB571504k used已经使用的物理内存数量53840k free空闲的物理内存数量，我们使用的是虚拟机，总共只分配了628MB内存，所以只有53MB的空闲内存了65800k buffers作为缓冲的内存数量5）第五行为交换分区（swap）信息内容备注Swap524280k total 交换分区（虚拟内存）的总大小0k used已经使用的交互分区的大小524280k free空闲交换分区的大小409280k cached作为缓存的交互分区的大小netstat 显示网络统计信息和端口占用情况基本语法netstat -anp |grep 进程号 (查看该进程网络信息)netstat -nlp | grep 端口号（查看网络端口号占用情况）常用选项说明选项备注-n拒绝显示别名，能显示数字的全部转化成数字-l仅列出有在listen（监听）的服务状态-p表示显示哪个进程在调用crond 系统定时任务启动crond服务service crond restart基本语法crontab [选项]常用选项说明选项备注-e编辑crontab定时任务-l查询crontab任务-r删除当前用户所有的crontab任务参数说明1) crontab -e会进入crontab编辑界面，会打开vim编辑器任务格式：* * * * * 要执行的任务项目含义范围第一个“*”一小时当中的第几分钟0-59第二个“*”一天当中的第几小时0-23第三个“*”一个月当中的第几天1-31第四个“*”一年当中的第几月1-12第五个“*”一周当中的星期几0-7（0和7都代表星期日）2) 特殊符号特殊符号含义*代表任何时间。比如第一个“*”就代表一小时中每分钟都执行一次的意思。，代表不连续的时间。比如“0 8,12,16 * 命令”，就代表在每天的8点0分，12点0分，16点0分都执行一次命令-代表连续的时间范围。比如“0 5 1-6命令”，代表在周一到周六的凌晨5点0分执行命令*/n代表每隔多久执行一次。比如“/10 * 命令”，代表每隔10分钟就执行一遍命令3）特定时间执行命令时间含义45 22 * * * 命令在22点45分执行命令0 17 * * 1 命令每周1 的17点0分执行命令0 5 1,15 * * 命令每月1号和15号的凌晨5点0分执行命令40 4 * * 1-5 命令每周一到周五的凌晨4点40分执行命令*/10 4 * * * 命令每天的凌晨4点，每隔10分钟执行一次命令0 0 1,15 * 1 命令每月1号和15号，每周1的0点0分都会执行命令。注意：星期几和几号最好不要同时出现，因为他们定义的都是天。非常容易让管理员混乱服务(service)管理服务(service) 本质就是进程，但是是运行在后台的，通常都会监听某个端口，等待其它程序的请求，比如(mysql , sshd 防火墙等)，因此又称为守护进程。基本语法service 服务名 [选项]上述操作只是临时生效，当重启系统后，还是回归以前对服务的设置,如果希望设置某个服务自启动或关闭永久生效，要使用chkconfig指令;在CentOS7.0后不再使用service,而是systemctl。常用选项说明选项备注start开启服务stop关闭服务restart重新启动服务reload重新启动服务status查看服务状态查看服务名使用setup-&gt;系统服务，就可以看到；ls -al /etc/init.d/服务的运行级别(runlevel)Linux系统有7种运行级别(runlevel),常用的是级别3和5;查看或者修改默认级别： vi /etc/inittab运行级别备注运行级别0系统停机状态，系统默认运行级别不能设为0，否则不能正常启动运行级别1单用户工作状态，root权限，用于系统维护，禁止远程登陆运行级别2多用户状态(没有NFS)，不支持网络运行级别3完全的多用户状态(有NFS)，登陆后进入控制台命令行模式运行级别4系统未使用，保留运行级别5X11控制台，登陆后进入图形GUI模式运行级别6系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动开机的流程说明开机-&gt;BIOS-&gt;/boot-&gt;init进程-&gt;运行级别-&gt;运行级别对应的服务chkconfig指令通过chkconfig命令可以给每个服务的各个运行级别设置自启动/关闭在CentOS7.0后不再使用chkconfig指令,而是systemctl。基本语法chkconfig –list|grep xxx (查看服务)chkconfig 服务名 –list (查看指定服务)chkconfig –level 5 服务名 on/off （指定某个服务，某各个运行级别，开启或关闭）chkconfig 服务名 on/off (指定关闭某个五福，不管是哪个级别都关闭)网络相关命令常用命令ifconfig (显示所有网络接口的配置信息)ping 目的主机 (测试主机之间网络连通性)软件包管理RPMRPM（RedHat Package Manager），RedHat软件包管理工具，类似windows里面的setup.exe是Linux这系列操作系统里面的打包安装工具，它虽然是RedHat的标志，但理念是通用的。RPM包的名称格式：Apache-1.3.23-11.i386.rpm“apache” 软件名称“1.3.23-11”软件的版本号，主版本和此版本“i386”是软件所运行的硬件平台，Intel 32位微处理器的统称“rpm”文件扩展名，代表RPM包RPM查询命令rpm -qa (查询所安装的所有rpm软件包)RPM卸载命令rpm -e 软件包rpm -e –nodeps 软件包选项说明选项备注-e卸载软件包–nodeps卸载软件时，不检查依赖。这样的话，那些使用该软件包的软件在此之后可能就不能正常工作了。RPM安装命令rpm -ivh RPM包全名选项说明选项备注-i-i=install，安装-v-v=verbose，显示详细信息-h-h=hash，进度条–nodeps–nodeps，不检测依赖进度YUMYUM（全称为 Yellow dog Updater, Modified）是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装基本语法yum [选项] [参数]常用选项说明选项备注-y对所有提问都回答“yes”常用参数说明参数备注install安装rpm软件包update更新rpm软件包check-update检查是否有可用的更新rpm软件包remove删除指定的rpm软件包list显示软件包信息clean清理yum过期的缓存deplist显示yum软件包的所有依赖关系","categories":[{"name":"linux","slug":"linux","permalink":"http://blog.yatus.cn/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.yatus.cn/tags/linux/"}]},{"title":"linux vi和vim编辑器简单使用","slug":"linux-vi和vim编辑器简单使用","date":"2018-01-07T07:16:37.000Z","updated":"2019-05-08T13:16:51.000Z","comments":true,"path":"2018/01/07/linux-vi和vim编辑器简单使用/","link":"","permalink":"http://blog.yatus.cn/2018/01/07/linux-vi和vim编辑器简单使用/","excerpt":"","text":"vi是Unix操作系统和类Unix操作系统中最通用的文本编辑器。vim编辑器是从vi发展出来的一个性能更强大的文本编辑器。可以主动的以字体颜色辨别语法的正确性，方便程序设计。vim与vi编辑器完全兼容。vi和vim常用的三种模式一般模式&emsp;&emsp;以vi打开一个档案就直接进入一般模式了（这是默认的模式）。在这个模式中，你可以使用『上下左右』按键来移动光标，你可以使用『删除字符』或『删除整行』来处理档案内容，也可以使用『复制、贴上』来处理你的文件数据。常用语法语法描述yy复制光标当前一行y数字y复制一段（从第几行到第几行）p箭头移动到目的行粘贴u撤销上一步dd删除光标当前行d数字d删除光标（含）后多少行x删除一个字母，相当于delX删除一个字母，相当于Backspaceyw复制一个词dw删除一个词shift+^移动到行头shift+$移动到行尾1+shift+g移动到页头，数字shift+g移动到页尾数字+shift+g移动到目标行编辑模式&emsp;&emsp;在一般模式中可以进行删除、复制、粘贴等的动作，但是却无法编辑文件内容的！要等到你按下『i, I, o, O, a, A, r, R』等任何一个字母之后才会进入编辑模式。注意了！通常在Linux中，按下这些按键时，在画面的左下方会出现『INSERT或 REPLACE』的字样，此时才可以进行编辑。而如果要回到一般模式时， 则必须要按下『Esc』这个按键即可退出编辑模式。进入编辑模式常用语法按键描述i当前光标前a当前光标后o当前光标行的下一行I光标所在行最前A光标所在行最后O当前光标行的上一行退出编辑模式，按『Esc』键退出命令模式&emsp;&emsp;在一般模式当中，输入『 : / ?』3个中的任何一个按钮，就可以将光标移动到最底下那一行。在这个模式当中，可以提供你『搜寻资料』的动作，而读取、存盘、大量取代字符、离开vi、显示行号等动作是在此模式中达成的！基本语法按键描述:w保存:q退出:!强制退出/要查找的词n查找下一个，N往上查找?要查找的词n查找上一个，shift + n是往下查找:set nu显示行号:set nonu关闭行号vi和vim模式的相互切换vi|vim键盘图","categories":[{"name":"linux","slug":"linux","permalink":"http://blog.yatus.cn/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.yatus.cn/tags/linux/"}]},{"title":"linux文件目录结构","slug":"linux文件目录结构","date":"2018-01-06T02:37:18.000Z","updated":"2019-05-08T13:16:56.000Z","comments":true,"path":"2018/01/06/linux文件目录结构/","link":"","permalink":"http://blog.yatus.cn/2018/01/06/linux文件目录结构/","excerpt":"","text":"在linux里，一切皆是文件，linux的文件系统是采用级层是的树状目录结构，在此结构中的最上层是根目录/，然后在此目录下在创建其他的目录。文件分类linux对数据文件(.mp3、.bmp)，程序文件(.c、.h、*.o)，设备文件（LCD、触摸屏、鼠标），网络文件(socket) 等的管理都抽象为文件，使用统一的方式方法管理。类型描述普通文件(数据文件)普通文件是用于存放数据、程序等信息的文件，一般都长期地存放在外存储器（磁盘）中。普通文件又分为文本文件和二进制文件目录文件目录文件是文件系统中一个目录所包含的目录项所组成的文件设备文件设备文件是用于为操作系统与设备提供连接的一种文件。在Linux系统中将设备作为文件来处理，操作设备就像是操作普通文件一样。每一个设备对应一个设备文件，存放在 /dev 目录中链接文件似于 windows 下的快捷方式，链接又可以分为软链接（符号链接）和硬链接管道文件管道文件主要用于在进程间传递数据的一种特殊文件套接口文件主要用于不同计算机间网络通信的一种特殊文件Linux文件目录速览12345678910111213141516171819202122├── / //根目录│ ├── root //超级管理员root的家目录│ ├── bin //常用的命令│ ├── boot //放置一些启动用的临时文件│ ├── dev //设备文件│ ├── etc //系统所有配置文件都放在它下面│ ├── home //用户目录，对应权限用户只能查看到自己的目录│ │ ├── yatu //登录名yatu的家目录│ ├── lib //用于存取程序的动态库和模块文件│ ├── lost+found //用于存放系统异常时丢失的文件│ ├── media //用于挂在本地磁盘或者其他储存设备│ ├── mnt //用于挂在其他临时系统文件│ ├── opt //用于存放第三方软件包的目录│ ├── proc //包含进程等信息，不是内存映射，不是真实目录│ ├── sbin //里面很多是root用户才能执行的命令，系统的更新备份还原和开关机用的│ ├── selinux //│ ├── srv //service的缩写，是一些网路服务启动后，这些服务所需取用资料目录│ ├── sys //系统信息│ ├── tmp //存放各种临时文件│ ├── usr //我们主要的操作空间│ ├── var //变量文件--在运行中内容不断变化的文件。│ └── ...Linux目录详解/, linux系统的根目录/root，该目录是系统管理员，也称作超级权限者的用户主目录/bin，bin是Binary英文的缩写，这个目录存放着最经常使用的命令/sbin，s就是super user的意思，这里存放的是系统管理员使用的系统管理程序/home，存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的/etc，存放着所有的系统管理所需要的配置文件和子目录/usr，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与windows下的program files目录/usr/local，这是另一个给主机额外安装软件所安装的目录。一般是通过编译源码方式安装的程序/boot，这里存放的是启动linux时使用的一些核心文件，包括一些链接文件以及镜像文件/media，linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备挂载到这个目录下/mnt，系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在/mnt/上，然后进入该目录就可以查看里的内容了/var，这个目录中存放着在不断扩充着的东西，习惯将经常被修改的目录放在这个目录下。包括各种日志文件/lib,系统开机所需要最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库/lost+found，该目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件/proc，这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息/srv，service缩写，该目录存放一些服务启动之后需要提取的数据/sys，这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统sysfs/tmp，这个目录是用来存放一些临时文件的/dev，类似于windows的设备管理器，把所有的硬件用文件的形式存储/opt，这是给主机额外安装软件所摆放的目录。如安装ORACLE数据库就可放到该目录下，默认为空/selinux，全称是security-enhanced linux，类似360，SELinux是一种安全子系统,它能控制程序只能访问特定文件","categories":[{"name":"linux","slug":"linux","permalink":"http://blog.yatus.cn/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://blog.yatus.cn/tags/linux/"}]}]}